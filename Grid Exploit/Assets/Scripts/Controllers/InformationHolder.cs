using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class InformationHolder : MonoBehaviour
{

    public static InformationHolder instance;

    #region Global variables

    public int currentShipIndex;

    public bool audioOn;

    public enum LANGUAGE
    {
        ENGLISH,
        SPANISH
    };

    public LANGUAGE language;

    public int currentMoney;

    #endregion

    private void Awake()
    {
        if(instance == null)
        {
            instance = this;
            DontDestroyOnLoad(this.gameObject);
        }
        else
        {
            Destroy(this.gameObject);
        }
    }

    void Start()
    {
        GetSavedValues();
    }

    #region Save Methods

    private void GetSavedValues()
    {
        //Current ship.
        if (ES3.KeyExists("currentShipIndex"))
        {
            currentShipIndex = ES3.Load<int>("currentShipIndex");
        }
        else
        {
            currentShipIndex = 0;
            ES3.Save<int>("currentShipIndex", currentShipIndex);
        }

        //Current money.
        if (ES3.KeyExists("currentMoney"))
        {
            currentMoney = ES3.Load<int>("currentMoney");
        }
        else
        {
            currentMoney = 0;
            ES3.Save<int>("currentMoney", currentMoney);
        }

        //Audio.
        if (ES3.KeyExists("audioOn"))
        {
            audioOn = ES3.Load<bool>("audioOn");
        }
        else
        {
            audioOn = true;
            ES3.Save<bool>("audioOn", audioOn);
        }

        //Language.
        if (ES3.KeyExists("language"))
        {
            language = ES3.Load<LANGUAGE>("language");
        }
        else
        {
            language = LANGUAGE.ENGLISH;
            ES3.Save<LANGUAGE>("language", language);
        }

        //Unlocked ships.
        for(int i = 0; i <= 4; i++)
        {
            if (!ES3.KeyExists("unlockedShip_"+i))
            {
                //The first ship will be always unlocked.
                if(i == 0)
                {
                    ES3.Save<bool>("unlockedShip_" + i, true);
                }
                else
                {
                    ES3.Save<bool>("unlockedShip_" + i, false);
                }
                
            }
        }

    }

    //Method to save the ship index.
    public void SaveCurrentShip(int index)
    {
        currentShipIndex = index;
        ES3.Save<int>("currentShipIndex", currentShipIndex);
    }

    //Method to save the ship index.
    public void SaveCurrentMoney(int money)
    {
        currentMoney = money;
        ES3.Save<int>("currentMoney", currentMoney);
    }

    //Method to save audio.
    public void SaveAudio(bool audio)
    {
        audioOn = audio;
        ES3.Save<bool>("audioOn", audioOn);
    }

    //Method to save language.
    public void SaveLanguage(LANGUAGE lang)
    {
        language = lang;
        ES3.Save<LANGUAGE>("language", language);
    }

    //Save purchased ship.
    public void SavePurchasedShip(int index)
    {
        currentShipIndex = index;
        ES3.Save<bool>("unlockedShip_" + index, true);
    }

    #endregion
}
