using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;

public class ShipStoreController : MonoBehaviour
{
    public int shipIndex;

    public List<Sprite> shipImages;
    public List<string> shipNames;
    public List<int> shipCosts;

    public Image shipImage;
    public Text shipNameText;
    public Text shipCostText;
    public Text currentMoneyText;

    public GameObject purchaseButton, selectButton;

    private MenuController menuController;

    // Start is called before the first frame update
    void Start()
    {
        shipIndex = 0;
        SetShip();

        menuController = FindObjectOfType<MenuController>();
    }


    private void SetShip()
    {
        shipImage.sprite = shipImages[shipIndex];
        shipNameText.text = shipNames[shipIndex];     

        if (ES3.Load<bool>("unlockedShip_" + shipIndex))
        {
            purchaseButton.SetActive(false);
            selectButton.SetActive(true);
            shipCostText.text = "";
        }
        else
        {
            purchaseButton.SetActive(true);
            selectButton.SetActive(false);
            shipCostText.text = "$" + shipCosts[shipIndex];

            if(InformationHolder.instance.currentMoney >= shipCosts[shipIndex])
            {
                purchaseButton.GetComponent<Button>().interactable = true;
            }
            else
            {
                purchaseButton.GetComponent<Button>().interactable = false;
            }
        }

        if (InformationHolder.instance.language == InformationHolder.LANGUAGE.ENGLISH)
        {
            currentMoneyText.text = "Current money: $" + InformationHolder.instance.currentMoney;
        }
        else
        {
            currentMoneyText.text = "Monedas actuales: $" + InformationHolder.instance.currentMoney;
        }
            
        
    }

    public void SelectShip()
    {
        InformationHolder.instance.SaveCurrentShip(shipIndex);

        menuController.ShowMainPanel();
    }

    public void PurchaseShip()
    {
        InformationHolder.instance.SaveCurrentMoney(InformationHolder.instance.currentMoney - shipCosts[shipIndex]);
        InformationHolder.instance.SavePurchasedShip(shipIndex);

        SetShip();
    }

    public void NextShip()
    {
        shipIndex ++;
        if(shipIndex > 4)
        {
            shipIndex = 0;
        }

        SetShip();
    }

    public void PrevShip()
    {
        shipIndex--;
        if(shipIndex < 0)
        {
            shipIndex = 4;
        }

        SetShip();
    }
}
