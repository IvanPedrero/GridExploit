using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;
using UnityEngine.SceneManagement;
using UnityEngine.Advertisements;

public class GameController : MonoBehaviour
{
    public GameObject player;
    public PlayerController playerController;

    public List<GameObject> ships;

    public int currentShipIndex;

    public ScoreController scoreController;

    [Header("Bool that indicates if the game has ended or not")]
    public bool gameEnded = false;

    public GameObject gameCanvas, endCanvas;

    public ScrollMaterial scrollMaterial;

    public Text scoreText, coinText;

    public GameObject explosionPrefab;

    public float levelSpeed = 8f;

    private void Awake()
    {
        currentShipIndex = InformationHolder.instance.currentShipIndex;

        GetShips();
    }

    // Start is called before the first frame update
    void Start()
    {
        gameEnded = false;

        InitShips();
    }

    #region Ship initialization

    private void GetShips()
    {
        foreach (Transform child in player.transform)
        {
            ships.Add(child.gameObject);
        }
    }

    private void InitShips()
    {
        for(int i = 0; i < ships.Count; i++)
        {
            if(currentShipIndex != i)
            {
                ships[i].SetActive(false);
            }
        }
    }

    #endregion

    #region Game Ending Management

    public void EndGame()
    {
        //Set the info.
        if (InformationHolder.instance.language == InformationHolder.LANGUAGE.ENGLISH)
        {
            scoreText.text = "Score: " + scoreController.currentScore;
            coinText.text = "Coins: " + scoreController.currentCoins;
        }
        else
        {
            scoreText.text = "Puntuación: " + scoreController.currentScore;
            coinText.text = "Monedas: " + scoreController.currentCoins;
        }

        //Set the flag.
        gameEnded = true;

        //Stop the scrolling.
        scrollMaterial.scrollSpeed = 0f;

        //Destroy player.
        player.SetActive(false);
        Instantiate(explosionPrefab, player.transform.position, Quaternion.identity);

        //Save collected coins.
        InformationHolder.instance.SaveCurrentMoney(InformationHolder.instance.currentMoney + scoreController.currentCoins);

        //Save score to the leaderboard.
        PlayServices.instance.AddScoreToLeaderboard(GPGSIds.leaderboard_grid_leaderboard, scoreController.currentScore);

        //End game after explosion.
        Invoke("EnableEndScreen", 3f);

    }

    private void EnableEndScreen()
    {
        //End game.
        gameCanvas.SetActive(!gameEnded);
        endCanvas.SetActive(gameEnded);

        Invoke("ShowAd", 2f);
    }

    public void Retry()
    {
        SceneManager.LoadScene(1);
    }

    public void GoToMenu()
    {
        SceneManager.LoadScene(0);
    }

    private void ShowAd()
    {
        if (Advertisement.IsReady())
        {
            Advertisement.Show();
        }
    }

    #endregion
}
